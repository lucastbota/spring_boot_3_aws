spring.application.name=energy-sa-customer
server.port=8093

spring.cloud.aws.credentials.access-key=key
spring.cloud.aws.credentials.secret-key=secret101
spring.cloud.aws.region.static=sa-east-1
spring.cloud.aws.endpoint=${LOCALSTACK_HOST:http://localhost:4566}
spring.cloud.aws.s3.endpoint=${S3_BUCKET_URL:http://s3.localhost.localstack.cloud:4566}
spring.cloud.aws.s3.region=sa-east-1

management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.tracing.sampling.probability=1.0

## Resilience
management.health.ratelimiters.enabled=true

resilience4j.ratelimiter.metrics.enabled=true
resilience4j.ratelimiter.instances.createCustomer.register-health-indicator=true
resilience4j.ratelimiter.instances.createCustomer.limit-for-period=10
resilience4j.ratelimiter.instances.createCustomer.limit-refresh-period=1s
resilience4j.ratelimiter.instances.createCustomer.timeout-duration=5s
resilience4j.ratelimiter.instances.createCustomer.allow-health-indicator-to-fail=true
resilience4j.ratelimiter.instances.createCustomer.subscribe-for-events=true
resilience4j.ratelimiter.instances.createCustomer.event-consumer-buffer-size=50

resilience4j.ratelimiter.instances.getCustomer.register-health-indicator=true
resilience4j.ratelimiter.instances.getCustomer.limit-for-period=20
resilience4j.ratelimiter.instances.getCustomer.limit-refresh-period=1s
resilience4j.ratelimiter.instances.getCustomer.timeout-duration=5s
resilience4j.ratelimiter.instances.getCustomer.allow-health-indicator-to-fail=true
resilience4j.ratelimiter.instances.getCustomer.subscribe-for-events=true
resilience4j.ratelimiter.instances.getCustomer.event-consumer-buffer-size=50

#Otel
otl.grpc.span.exporter.url=http://localhost:4317

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]